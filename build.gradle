version = '0.1.1-SNAPSHOT'

['base', 'distribution', 'maven-publish'].each {
    apply plugin: it
}

task wrapper(type: Wrapper, description: 'Creates and deploys the Gradle wrapper to the current directory.') {
    gradleVersion = '2.14'
}

subprojects.each { subproject -> evaluationDependsOn(subproject.path) }

project(':modules').subprojects {
    project(':modules').subprojects.publish
    publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
            artifact (javadocJar) {
                classifier = 'javadoc'
            }

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name libraryName
                    description libraryDescription
                    url libraryUrl
                    scm {
                        url "https://github.com/exbin/${repositoryName}"
                        connection "cm:git:git://github.com/exbin/${repositoryName}.git"
                        developerConnection "scm:git:git@github.com:exbin/${repositoryName}.git"
                    }
                    licenses {
                        license {
                            name 'LGPL license, Version 3.0'
                            url 'https://www.gnu.org/licenses/lgpl.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'HajdaM'
                            name 'Miroslav Hajda'
                            email 'hajdam@users.sf.net'
                        }
                    }
                }
            }
        }
    }

    repositories {
        mavenLocal()
    }
}
}

distributions {
    main {
        contents {
            duplicatesStrategy = 'exclude'

            from project.rootDir
            from 'src/dist'
            include 'readme.txt'

            project(':modules').subprojects.each { p ->
                p.plugins.withType(JavaPlugin) {
                    into('') {
                        from p.jar
                        include '*'
                        from p.sourceJar
                        include '*'
                        from p.javadocJar
                        include '*'
                    }
                }
            }

            into('doc') {
                from 'doc'
                include '**'
            }
            into('resources') {
                from 'resources'
                include '**'
                exclude 'private'
            }
        }
    }
}
